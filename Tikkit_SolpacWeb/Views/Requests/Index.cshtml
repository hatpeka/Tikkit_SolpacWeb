@model IEnumerable<Tikkit_SolpacWeb.Models.Requests>
@using System.Text.RegularExpressions;

@functions {
    public static string ExtractPhoneNumber(string input)
    {
        if (string.IsNullOrEmpty(input)) return string.Empty;

        var regex = new Regex(@"\d+");
        var match = regex.Match(input);

        return match.Success ? match.Value : string.Empty;
    }
}

@{
    ViewData["Title"] = "Index";
}

<form method="get" class="form-inline my-2 my-lg-0">
    @{
        var prioritySelected = Context.Request.Query["priority"];
        var statusSelected = Context.Request.Query["status"];
    }
    <input class="form-control mr-sm-2" type="date" name="fromDate" placeholder="From Date" aria-label="From Date" value="@Context.Request.Query["fromDate"]">
    <input class="form-control mr-sm-2" type="date" name="toDate" placeholder="To Date" aria-label="To Date" value="@Context.Request.Query["toDate"]">
    <input class="form-control mr-sm-2" type="text" name="partner" placeholder="Partner" aria-label="Partner" value="@Context.Request.Query["partner"]">
    <select class="form-control mr-sm-2" name="priority">
        <option value="" selected="@(string.IsNullOrEmpty(prioritySelected))">Priority</option>
        <option value="Normal" selected="@(prioritySelected == "Normal")">Normal</option>
        <option value="Urgent" selected="@(prioritySelected == "Urgent")">Urgent</option>
    </select>
    @if(ViewBag.UserRole == "Staff")
    {
        <input class="form-control mr-sm-2" type="text" name="createPerson" placeholder="Create Person" aria-label="Create Person" value="@Context.Request.Query["createPerson"]">
    }
    <input class="form-control mr-sm-2" type="text" name="project" placeholder="Project" aria-label="Project" value="@Context.Request.Query["project"]">
    <select class="form-control mr-sm-2" name="status">
        <option value="" selected="@(string.IsNullOrEmpty(statusSelected))">Status</option>
        <option value="Done" selected="@(statusSelected == "Done")">Done</option>
        <option value="Processing" selected="@(statusSelected == "Processing")">Processing</option>
        <option value="Pending" selected="@(statusSelected == "Pending")">Pending</option>
    </select>
    <input class="form-control mr-sm-2" type="text" name="supporter" placeholder="Supporter" aria-label="Supporter" value="@Context.Request.Query["supporter"]">
    <input class="form-control mr-sm-2" type="search" name="search" placeholder="Search" aria-label="Search" value="@Context.Request.Query["search"]">
    <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>

</form>


    
<br />
    <a class="btn btn-outline-info" asp-action="ExportToExcel" asp-all-route-data="@(Context.Request.Query.ToDictionary(k => k.Key, k => k.Value.ToString()))">Export</a>
<br />
<br />

<table class="table bordered-table">
    <thead>
        <tr>
            <th></th>
            <th></th>
            <th>Request Date</th>
            @if (ViewBag.UserRole == "Client" || ViewBag.UserRole == "Admin")
            {
                <th>Request Person</th>
            }
            <th>Start Date</th>
            <th>Start Time</th>
            <th>Expected Date</th>
            <th>End Time</th>
            <th>End Date</th>
            @if (ViewBag.UserRole == "Staff")
            {
                <th>Partner</th>
                <th>Project</th>
                <th>Request Person</th>
                <th>Create Person</th>
            }
            <th>Priority</th>
            <th>Subject of Request</th>
            <th>Contents of Request</th>
            <th>Image</th>
            <th>Reason</th>
            <th>Support Content</th>
            <th>Total Time</th>
            @if (ViewBag.UserRole == "Staff")
            {
                <th>Supporter</th>
            }
            <th>Status</th>
            @if (ViewBag.UserRole == "Staff")
            {
                <th>Contact</th>
            }
        </tr>
    </thead>
    <tbody>
        @{
            int order = 1;
        }
        @foreach (var request in Model.OrderByDescending(r => r.RequestDate).Where(r => string.IsNullOrEmpty(Context.Request.Query["search"]) || r.SubjectOfRequest.Contains(Context.Request.Query["search"].ToString()) || r.ContentsOfRequest.Contains(Context.Request.Query["search"].ToString())))
        {
            string backgroundColor = "";
            switch (request.Status)
            {
                case "Pending":
                    backgroundColor = "#FCD5B4";
                    break;
                case "Processing":
                    backgroundColor = "#F2CF59";
                    break;
                case "Done":
                    backgroundColor = "#B5DDD1";
                    break;
            }
            <tr style="background-color: @backgroundColor">
                <td>
                    <a asp-action="Details" asp-route-id="@request.RequestNo" data-toggle="modal" data-target="#myModal" data-title="Details">Details</a>
                </td>
                <td>@order</td>
                <td>@request.RequestDate.ToString("dd-MM")</td>
                @if (ViewBag.UserRole == "Client" || ViewBag.UserRole == "Admin")
                {
                    <td>@request.RequestPerson</td>
                }
                <td>@(request.StartDate.HasValue && request.StartDate.Value != DateTime.MinValue ? request.StartDate.Value.ToString("dd-MM") : "")</td>
                <td>@(request.StartDate.HasValue && request.StartDate.Value != DateTime.MinValue ? request.StartDate.Value.ToString("HH:mm") : "")</td>
                <td>@(request.ExpectedDate.HasValue && request.ExpectedDate.Value != DateTime.MinValue ? request.ExpectedDate.Value.ToString("dd-MM") : "")</td>
                <td>@(request.EndDate.HasValue && request.EndDate.Value != DateTime.MinValue ? request.EndDate.Value.ToString("HH:mm") : "")</td>
                <td>@(request.EndDate.HasValue && request.EndDate.Value != DateTime.MinValue ? request.EndDate.Value.ToString("dd-MM") : "")</td>
                @if (ViewBag.UserRole == "Staff")
                {
                    <td>@request.Partner</td>
                    <td>@request.Project</td>
                    <td>@request.RequestPerson</td>
                    <td>@request.CreatePerson</td>
                }
                <td>@request.Priority</td>
                <td>@request.SubjectOfRequest</td>
                <td>@request.ContentsOfRequest</td>
                <td>Ảnh</td>
                <td>@request.Reason</td>
                <td>@request.SupportContent</td>
                <td>@request.TotalTime</td>
                @if (ViewBag.UserRole == "Staff")
                {
                    <td>@request.Supporter</td>
                }
                <td>
                    @if (@request.Status != "Done")
                    {
                        @if (ViewBag.UserRole == "Staff")
                        {
                            <a asp-action="StaffResponse" asp-route-id="@request.RequestNo" data-toggle="modal" data-target="#myModal" data-title="Response">@request.Status</a>
                        }
                        else
                        {
                            @request.Status
                        }
                    }
                    else
                    {
                        @request.Status
                    }
                </td>                
                @if (ViewBag.UserRole == "Staff")
                {
                <td>
                    @{
                        var phoneNumber = ExtractPhoneNumber(request.Contact);
                        var zaloLink = $"https://zalo.me/{phoneNumber}";
                    }
                    @if (!string.IsNullOrEmpty(phoneNumber))
                    {
                        <a href="@zaloLink" target="_blank">Zalo</a>
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => request.Contact)
                    }
                </td>
                }
                <td>
                    <a asp-action="EditforStaff" asp-route-id="@request.RequestNo" data-toggle="modal" data-target="#myModal" data-title="Edit">Edit</a>
                </td>
            </tr>
            order++;
        }
    </tbody>
</table>

<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="myModalLabel">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<script>
    $(document).ready(function () {
        $("a[data-toggle='modal']").on("click", function (e) {
            e.preventDefault();
            var url = $(this).attr("href");
            var title = $(this).data("title");
            $("#myModalLabel").text(title);
            $("#myModal .modal-body").load(url, function () {
                $("#myModal").modal("show");
            });
        });
    });
</script>
