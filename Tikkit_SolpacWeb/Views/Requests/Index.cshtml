@model IEnumerable<Tikkit_SolpacWeb.Models.Requests>
@using System.Text.RegularExpressions;

@functions {
    public static string ExtractPhoneNumber(string input)
    {
        if (string.IsNullOrEmpty(input)) return string.Empty;

        var regex = new Regex(@"\d+");
        var match = regex.Match(input);

        return match.Success ? match.Value : string.Empty;
    }
}

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.RequestDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RequestPerson)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Priority)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SubjectOfRequest)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ContentsOfRequest)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Reason)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SupportContent)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TotalTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Contact)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.RequestDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RequestPerson)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Priority)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SubjectOfRequest)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ContentsOfRequest)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Reason)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SupportContent)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TotalTime)
            </td>
                <td>
                    @{
                        var phoneNumber = ExtractPhoneNumber(item.Contact);
                        var zaloLink = $"https://zalo.me/{phoneNumber}";
                    }
                    @if (!string.IsNullOrEmpty(phoneNumber))
                    {
                        <a href="@zaloLink" target="_blank">Zalo</a>
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.Contact)
                    }
                </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.RequestNo">Edit</a> |
                <a asp-action="Delete" asp-route-id="@item.RequestNo">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
